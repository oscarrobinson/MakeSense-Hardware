<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Contiki 2.6: platform/OrisenPrime/dev/sht25.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />



</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Contiki 2.6
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_da81161b528b307837d2c2604d1aafcb.html">platform</a>      </li>
      <li class="navelem"><a class="el" href="dir_61c1519dc7c64251c41b08c597bd4931.html">OrisenPrime</a>      </li>
      <li class="navelem"><a class="el" href="dir_2c3bf02cfca604d79735b3e18babb9e3.html">dev</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">sht25.c</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * sht25.c</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> *  Created on: 1 Sep 2011</span>
<a name="l00005"></a>00005 <span class="comment"> *      Author: mcphillips</span>
<a name="l00006"></a>00006 <span class="comment"> */</span>
<a name="l00007"></a>00007 
<a name="l00008"></a>00008 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;i2c.h&quot;</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &quot;include/sht25.h&quot;</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="preprocessor">#define DEBUG 1</span>
<a name="l00014"></a>00014 <span class="preprocessor"></span><span class="preprocessor">#if DEBUG</span>
<a name="l00015"></a>00015 <span class="preprocessor"></span><span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00016"></a>00016 <span class="preprocessor">#define PRINTF(...) printf(__VA_ARGS__)</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00018"></a>00018 <span class="preprocessor"></span><span class="preprocessor">#define PRINTF(...)</span>
<a name="l00019"></a>00019 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span>
<a name="l00021"></a>00021 <span class="keywordtype">void</span> sht25_init(<span class="keywordtype">void</span>){
<a name="l00022"></a>00022         uint8_t request = SHT25_READ_USER_REG;
<a name="l00023"></a>00023         uint8_t read = 0;
<a name="l00024"></a>00024 
<a name="l00025"></a>00025         i2c_transmitinit( SHT25_I2C_ADDR, 1, &amp;request ) ;
<a name="l00026"></a>00026         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00027"></a>00027 
<a name="l00028"></a>00028         i2c_receiveinit( SHT25_I2C_ADDR, 1, &amp;read ) ;
<a name="l00029"></a>00029         PRINTF(<span class="stringliteral">&quot;SHT25 user reg = %x\n&quot;</span>,read);
<a name="l00030"></a>00030 }
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="keywordtype">void</span> sht25_soft_reset(<span class="keywordtype">void</span>){
<a name="l00033"></a>00033         uint8_t request = SHT25_SOFT_RESET ;
<a name="l00034"></a>00034 
<a name="l00035"></a>00035         i2c_transmitinit( SHT25_I2C_ADDR, 1, &amp;request ) ;
<a name="l00036"></a>00036         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00037"></a>00037 }
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 <span class="keywordtype">void</span> sht25_trigger_t(<span class="keywordtype">void</span>){
<a name="l00040"></a>00040         uint8_t request = SHT25_TRIGGER_T ;
<a name="l00041"></a>00041 
<a name="l00042"></a>00042         i2c_transmitinit( SHT25_I2C_ADDR, 1, &amp;request ) ;
<a name="l00043"></a>00043         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00044"></a>00044 }
<a name="l00045"></a>00045 <span class="keywordtype">void</span> sht25_trigger_rh(<span class="keywordtype">void</span>){
<a name="l00046"></a>00046         uint8_t request = SHT25_TRIGGER_RH ;
<a name="l00047"></a>00047 
<a name="l00048"></a>00048         i2c_transmitinit( SHT25_I2C_ADDR, 1, &amp;request ) ;
<a name="l00049"></a>00049         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00050"></a>00050 }
<a name="l00051"></a>00051 <span class="keywordtype">void</span> sht25_get_data(uint8_t *buffer){
<a name="l00052"></a>00052         uint8_t read[] = {0,0,0};
<a name="l00053"></a>00053 
<a name="l00054"></a>00054         i2c_receiveinit( SHT25_I2C_ADDR, 3, read ) ;
<a name="l00055"></a>00055         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00056"></a>00056 
<a name="l00057"></a>00057         <span class="keywordflow">if</span> ((read[1] &amp; SHT25_STAT) == SHT25_STAT){
<a name="l00058"></a>00058                 buffer[8] = read[0];
<a name="l00059"></a>00059                 buffer[9] = read[1];
<a name="l00060"></a>00060                 buffer[10] = read[2];
<a name="l00061"></a>00061         }
<a name="l00062"></a>00062         <span class="keywordflow">else</span> {
<a name="l00063"></a>00063                 buffer[5] = read[0];
<a name="l00064"></a>00064                 buffer[6] = read[1];
<a name="l00065"></a>00065                 buffer[7] = read[2];
<a name="l00066"></a>00066         }
<a name="l00067"></a>00067 }
<a name="l00068"></a>00068 
<a name="l00069"></a>00069 <span class="keywordtype">void</span> sht25_decode(<span class="keyword">struct</span> sht25_data *<span class="keyword">const</span> hum_data , uint8_t *buffer) {
<a name="l00070"></a>00070         hum_data-&gt;humidity = -6 + 125 / 65536.0 * (float)((buffer[9] &amp; 0xFC) + (buffer[8]&lt;&lt;8));
<a name="l00071"></a>00071         hum_data-&gt;temp = -46.85 + 175.72 / 65536.0 * (float)((buffer[6] &amp; 0xFC) + (buffer[5]&lt;&lt;8));
<a name="l00072"></a>00072 }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 
</pre></div></div><!-- contents -->


<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 13 2013 10:57:27 for Contiki 2.6 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
