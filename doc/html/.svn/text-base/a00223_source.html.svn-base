<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Contiki 2.6: cpu/cc2430/dev/random.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />



</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Contiki 2.6
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_bd0bc4a94a775a8b7ece71496ffca05e.html">cpu</a>      </li>
      <li class="navelem"><a class="el" href="dir_00802af3c5996426ebace365e6a37d81.html">cc2430</a>      </li>
      <li class="navelem"><a class="el" href="dir_2ac6ef05c3d0db66a619a71f04e7bd65.html">dev</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">random.c</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00223.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (c) 2010, Loughborough University - Computer Science</span>
<a name="l00003"></a>00003 <span class="comment"> * All rights reserved.</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * Redistribution and use in source and binary forms, with or without</span>
<a name="l00006"></a>00006 <span class="comment"> * modification, are permitted provided that the following conditions</span>
<a name="l00007"></a>00007 <span class="comment"> * are met:</span>
<a name="l00008"></a>00008 <span class="comment"> * 1. Redistributions of source code must retain the above copyright</span>
<a name="l00009"></a>00009 <span class="comment"> *    notice, this list of conditions and the following disclaimer.</span>
<a name="l00010"></a>00010 <span class="comment"> * 2. Redistributions in binary form must reproduce the above copyright</span>
<a name="l00011"></a>00011 <span class="comment"> *    notice, this list of conditions and the following disclaimer in the</span>
<a name="l00012"></a>00012 <span class="comment"> *    documentation and/or other materials provided with the distribution.</span>
<a name="l00013"></a>00013 <span class="comment"> * 3. Neither the name of the Institute nor the names of its contributors</span>
<a name="l00014"></a>00014 <span class="comment"> *    may be used to endorse or promote products derived from this software</span>
<a name="l00015"></a>00015 <span class="comment"> *    without specific prior written permission.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS&#39;&#39; AND</span>
<a name="l00018"></a>00018 <span class="comment"> * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</span>
<a name="l00019"></a>00019 <span class="comment"> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</span>
<a name="l00020"></a>00020 <span class="comment"> * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE</span>
<a name="l00021"></a>00021 <span class="comment"> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>
<a name="l00022"></a>00022 <span class="comment"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>
<a name="l00023"></a>00023 <span class="comment"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>
<a name="l00024"></a>00024 <span class="comment"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT</span>
<a name="l00025"></a>00025 <span class="comment"> * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY</span>
<a name="l00026"></a>00026 <span class="comment"> * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF</span>
<a name="l00027"></a>00027 <span class="comment"> * SUCH DAMAGE.</span>
<a name="l00028"></a>00028 <span class="comment"> *</span>
<a name="l00029"></a>00029 <span class="comment"> * This file is part of the Contiki operating system.</span>
<a name="l00030"></a>00030 <span class="comment"> */</span>
<a name="l00031"></a>00031 <span class="comment"></span>
<a name="l00032"></a>00032 <span class="comment">/**</span>
<a name="l00033"></a>00033 <span class="comment"> * \file</span>
<a name="l00034"></a>00034 <span class="comment"> *         Random number generator routines exploiting the cc2430 hardware</span>
<a name="l00035"></a>00035 <span class="comment"> *         capabilities.</span>
<a name="l00036"></a>00036 <span class="comment"> *</span>
<a name="l00037"></a>00037 <span class="comment"> *         This file overrides core/lib/random.c.</span>
<a name="l00038"></a>00038 <span class="comment"> *</span>
<a name="l00039"></a>00039 <span class="comment"> * \author</span>
<a name="l00040"></a>00040 <span class="comment"> *         George Oikonomou - &lt;oikonomou@users.sourceforge.net&gt;</span>
<a name="l00041"></a>00041 <span class="comment"> */</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="a00781.html" title="CC2430 registers header file for CC2430.">cc2430_sfr.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="a00785.html" title="CC2430 RF driver header file.">dev/cc2430_rf.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="comment">/*---------------------------------------------------------------------------*/</span><span class="comment"></span>
<a name="l00045"></a>00045 <span class="comment">/**</span>
<a name="l00046"></a>00046 <span class="comment"> * \brief      Generates a new random number using the cc2430 RNG.</span>
<a name="l00047"></a>00047 <span class="comment"> * \return     The random number.</span>
<a name="l00048"></a>00048 <span class="comment"> */</span>
<a name="l00049"></a>00049 <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>
<a name="l00050"></a><a class="code" href="a00223.html#a3b38526f57c5311c58c1440e18f3cebe">00050</a> <a class="code" href="a00223.html#a3b38526f57c5311c58c1440e18f3cebe" title="Generates a new random number using the cc2430 RNG.">random_rand</a>(<span class="keywordtype">void</span>)
<a name="l00051"></a>00051 {
<a name="l00052"></a>00052   <span class="comment">/* Clock the RNG LSFR once */</span>
<a name="l00053"></a>00053   ADCCON1 |= ADRCTRL0;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055   <span class="keywordflow">return</span> (RNDL | (RNDH &lt;&lt; 8));
<a name="l00056"></a>00056 }
<a name="l00057"></a>00057 <span class="comment">/*---------------------------------------------------------------------------*/</span><span class="comment"></span>
<a name="l00058"></a>00058 <span class="comment">/**</span>
<a name="l00059"></a>00059 <span class="comment"> * \brief      Seed the cc2430 random number generator.</span>
<a name="l00060"></a>00060 <span class="comment"> * \param seed Seed value for the RNG.</span>
<a name="l00061"></a>00061 <span class="comment"> *</span>
<a name="l00062"></a>00062 <span class="comment"> *             If the SEED argument is 0, seed the RNG with IF_ADC as</span>
<a name="l00063"></a>00063 <span class="comment"> *             discussed in the cc2430 datasheet (rev. 2.1), section 13.11.2.2,</span>
<a name="l00064"></a>00064 <span class="comment"> *             page 134. Seeding with this method should not be done during</span>
<a name="l00065"></a>00065 <span class="comment"> *             normal radio operation. Thus, use this function before</span>
<a name="l00066"></a>00066 <span class="comment"> *             initialising the network.</span>
<a name="l00067"></a>00067 <span class="comment"> *</span>
<a name="l00068"></a>00068 <span class="comment"> *             If the SEED is provided, seed with this value instead. This will</span>
<a name="l00069"></a>00069 <span class="comment"> *             result in the same sequence of random numbers each time the node</span>
<a name="l00070"></a>00070 <span class="comment"> *             reboots. So, don&#39;t use it unless you have a reason (e.g. tests)</span>
<a name="l00071"></a>00071 <span class="comment"> */</span>
<a name="l00072"></a>00072 <span class="keywordtype">void</span>
<a name="l00073"></a><a class="code" href="a00223.html#a1450c78dbb54fb9f7ae681908eace9d5">00073</a> <a class="code" href="a00223.html#a1450c78dbb54fb9f7ae681908eace9d5" title="Seed the cc2430 random number generator.">random_init</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> seed)
<a name="l00074"></a>00074 {
<a name="l00075"></a>00075   <span class="keywordtype">int</span> i;
<a name="l00076"></a>00076 
<a name="l00077"></a>00077   <span class="comment">/* Comment out this if() block to save a nice 16 bytes of code size */</span>
<a name="l00078"></a>00078   <span class="keywordflow">if</span>(seed) {
<a name="l00079"></a>00079     <span class="comment">/* If the caller provides a seed, write the high-byte first and then</span>
<a name="l00080"></a>00080 <span class="comment">     * write the low byte */</span>
<a name="l00081"></a>00081     RNDL = seed &gt;&gt; 8;   <span class="comment">/* High byte first */</span>
<a name="l00082"></a>00082     RNDL = seed &amp; 0xFF;
<a name="l00083"></a>00083     <span class="keywordflow">return</span>;
<a name="l00084"></a>00084   }
<a name="l00085"></a>00085 
<a name="l00086"></a>00086   <span class="comment">/*</span>
<a name="l00087"></a>00087 <span class="comment">   * cc2430 Datasheet:</span>
<a name="l00088"></a>00088 <span class="comment">   * &quot;When a true random value is required, the LFSR should be seeded by</span>
<a name="l00089"></a>00089 <span class="comment">   * writing RNDL with random values from the IF_ADC in the RF receive path.&quot;</span>
<a name="l00090"></a>00090 <span class="comment">   *</span>
<a name="l00091"></a>00091 <span class="comment">   * &quot;To use this seeding method, the radio must first be powered on by</span>
<a name="l00092"></a>00092 <span class="comment">   * enabling the voltage regulator&quot;</span>
<a name="l00093"></a>00093 <span class="comment">   */</span>
<a name="l00094"></a>00094   RFPWR &amp;= ~RREG_RADIO_PD;        <span class="comment">/* Turn on the voltage regulator */</span>
<a name="l00095"></a>00095   <span class="keywordflow">while</span>(!(RFIF &amp; IRQ_RREG_ON));   <span class="comment">/* Wait for power up*/</span>
<a name="l00096"></a>00096 
<a name="l00097"></a>00097   <span class="comment">/* OK, it&#39;s powered. The respective interrupt flag has been set, clear it */</span>
<a name="l00098"></a>00098   RFIF &amp;= ~IRQ_RREG_ON;
<a name="l00099"></a>00099 
<a name="l00100"></a>00100   <span class="comment">/*</span>
<a name="l00101"></a>00101 <span class="comment">   * &quot;The radio should be placed in infinite TX state, to avoid possible sync</span>
<a name="l00102"></a>00102 <span class="comment">   * detect in RX state.&quot;</span>
<a name="l00103"></a>00103 <span class="comment">   *</span>
<a name="l00104"></a>00104 <span class="comment">   * Judging by old chipcon cc2430 code examples as well as by the way cc2530</span>
<a name="l00105"></a>00105 <span class="comment">   * works, this is very likely to be &quot;RX state&quot; (i.e. a typo in the datasheet)</span>
<a name="l00106"></a>00106 <span class="comment">   *</span>
<a name="l00107"></a>00107 <span class="comment">   * With infinite TX, ADCTSTx always read as 0 so we&#39;ll use infinite RX</span>
<a name="l00108"></a>00108 <span class="comment">   */</span>
<a name="l00109"></a>00109   MDMCTRL1L = 0x02; <span class="comment">/* RX mode 10 - RX_INFINITE state */</span>
<a name="l00110"></a>00110 
<a name="l00111"></a>00111   <span class="comment">/* &quot;Enter RX State - Immediate&quot; command strobe */</span>
<a name="l00112"></a>00112   <a class="code" href="a00784.html#adfae0bca90e9c8ba0a7dbcb1d168a0be" title="Execute a single CSP command.">cc2430_rf_command</a>(ISRXON);
<a name="l00113"></a>00113 
<a name="l00114"></a>00114   <span class="comment">/* Make sure the RNG is on */</span>
<a name="l00115"></a>00115   ADCCON1 &amp;= ~(ADRCTRL1 | ADRCTRL0);
<a name="l00116"></a>00116 
<a name="l00117"></a>00117   <span class="comment">/* Wait for IF_ADC I-branch and Q-branch values */</span>
<a name="l00118"></a>00118   <span class="keywordflow">while</span>(!(ADCTSTH &amp; ADCTSTL));
<a name="l00119"></a>00119 
<a name="l00120"></a>00120   <span class="comment">/* 32 times as per the chipcon example. This seems to increase randomness */</span>
<a name="l00121"></a>00121   <span class="keywordflow">for</span>(i = 0; i &lt; 32; i++) {
<a name="l00122"></a>00122     <span class="comment">/* Seed the RNG by writing into RNDL twice with values from ADCTSTx */</span>
<a name="l00123"></a>00123     RNDL = ADCTSTH;
<a name="l00124"></a>00124     RNDL = ADCTSTL;
<a name="l00125"></a>00125 
<a name="l00126"></a>00126     <span class="comment">/* Clock the RNG LSFR once */</span>
<a name="l00127"></a>00127     ADCCON1 |= ADRCTRL0;
<a name="l00128"></a>00128   }
<a name="l00129"></a>00129 
<a name="l00130"></a>00130   <span class="comment">/*</span>
<a name="l00131"></a>00131 <span class="comment">   * Exit RX state. Just shut down, network initialisation will take care of</span>
<a name="l00132"></a>00132 <span class="comment">   * properly starting the radio for us.</span>
<a name="l00133"></a>00133 <span class="comment">   */</span>
<a name="l00134"></a>00134   RFPWR |= RREG_RADIO_PD;
<a name="l00135"></a>00135 }
</pre></div></div><!-- contents -->


<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 13 2013 10:57:22 for Contiki 2.6 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
