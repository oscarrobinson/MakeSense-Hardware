<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Contiki 2.6: platform/OrisenPrime/dev/hmc5883l.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />



</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Contiki 2.6
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_da81161b528b307837d2c2604d1aafcb.html">platform</a>      </li>
      <li class="navelem"><a class="el" href="dir_61c1519dc7c64251c41b08c597bd4931.html">OrisenPrime</a>      </li>
      <li class="navelem"><a class="el" href="dir_2c3bf02cfca604d79735b3e18babb9e3.html">dev</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">hmc5883l.c</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * hmc5883l.c</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> *  Created on: 6 Dec 2011</span>
<a name="l00005"></a>00005 <span class="comment"> *      Author: mcphillips</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> *  Updated on: 01 Sept 2012 by Jagun Kwon (j.kwon@cs.ucl.ac.uk)</span>
<a name="l00008"></a>00008 <span class="comment"> *  Refactored to comply with Contiki sensor interface structure</span>
<a name="l00009"></a>00009 <span class="comment"> *  hmc5883l: 3-Axis Digital Compass</span>
<a name="l00010"></a>00010 <span class="comment"> */</span>
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00013"></a>00013 <span class="preprocessor">#include &quot;i2c.h&quot;</span>
<a name="l00014"></a>00014 <span class="preprocessor">#include &quot;include/hmc5883l.h&quot;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;lib/sensors.h&quot;</span>    <span class="comment">// for Contiki sensor interface</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="keyword">extern</span> <span class="keyword">volatile</span> uint8_t timer_delay;
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="keywordtype">void</span> hmc5883l_init(<span class="keywordtype">void</span>) {
<a name="l00021"></a>00021         uint8_t <span class="keyword">set</span>[] = {0,0} ;
<a name="l00022"></a>00022 
<a name="l00023"></a>00023         <span class="keyword">set</span>[0] = HMC5883L_RA_CONFIG_A ;
<a name="l00024"></a>00024         <span class="keyword">set</span>[1] = (HMC5883L_AVERAGING_2 | HMC5883L_RATE_75 | HMC5883L_BIAS_NORMAL);
<a name="l00025"></a>00025         i2c_transmitinit( HMC5883L_I2C_ADDR, 2, <span class="keyword">set</span> ) ;
<a name="l00026"></a>00026         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00027"></a>00027 
<a name="l00028"></a>00028         <span class="keyword">set</span>[0] = HMC5883L_RA_CONFIG_B ;
<a name="l00029"></a>00029         <span class="keyword">set</span>[1] = HMC5883L_GAIN_1090;    <span class="comment">// default is HMC5883L_GAIN_1090 - if changing change the scaling below too.</span>
<a name="l00030"></a>00030         i2c_transmitinit( HMC5883L_I2C_ADDR, 2, <span class="keyword">set</span> ) ;
<a name="l00031"></a>00031         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00032"></a>00032 }
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="keywordtype">void</span> hmc5883l_start(<span class="keywordtype">void</span>) {
<a name="l00035"></a>00035         uint8_t <span class="keyword">set</span>[] = {0,0} ;
<a name="l00036"></a>00036 
<a name="l00037"></a>00037         <span class="keyword">set</span>[0] = HMC5883L_RA_MODE ;
<a name="l00038"></a>00038         <span class="keyword">set</span>[1] = HMC5883L_MODE_CONTINUOUS;
<a name="l00039"></a>00039         i2c_transmitinit( HMC5883L_I2C_ADDR, 2, <span class="keyword">set</span> ) ;
<a name="l00040"></a>00040         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00041"></a>00041 }
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 <span class="keywordtype">void</span> hmc5883l_stop(<span class="keywordtype">void</span>) {
<a name="l00044"></a>00044         uint8_t <span class="keyword">set</span>[] = {0,0} ;
<a name="l00045"></a>00045 
<a name="l00046"></a>00046         <span class="keyword">set</span>[0] = HMC5883L_RA_MODE ;
<a name="l00047"></a>00047         <span class="keyword">set</span>[1] = HMC5883L_MODE_IDLE;
<a name="l00048"></a>00048         i2c_transmitinit( HMC5883L_I2C_ADDR, 2, <span class="keyword">set</span> ) ;
<a name="l00049"></a>00049         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00050"></a>00050 }
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="keywordtype">void</span> hmc5883l_get_data(uint8_t *buffer) {
<a name="l00053"></a>00053         uint8_t request_MSB = HMC5883L_RA_DATAX_H ;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055         i2c_transmitinit( HMC5883L_I2C_ADDR, 1, &amp;request_MSB ) ;
<a name="l00056"></a>00056         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00057"></a>00057 
<a name="l00058"></a>00058         i2c_receiveinit( HMC5883L_I2C_ADDR, 6, buffer ) ;
<a name="l00059"></a>00059         <span class="keywordflow">while</span>(!i2c_transferred()) <span class="comment">/* Wait for transfer */</span> ;
<a name="l00060"></a>00060 }
<a name="l00061"></a>00061 
<a name="l00062"></a>00062 <span class="keywordtype">void</span> hmc5883l_decode(<span class="keyword">struct</span> hmc5883l_data *mag_data , uint8_t *buffer) {
<a name="l00063"></a>00063         mag_data-&gt;mag_x = ((buffer[0]&lt;&lt;8) + buffer[1]);
<a name="l00064"></a>00064         mag_data-&gt;mag_z = ((buffer[2]&lt;&lt;8) + buffer[3]);
<a name="l00065"></a>00065         mag_data-&gt;mag_y = ((buffer[4]&lt;&lt;8) + buffer[5]);
<a name="l00066"></a>00066 }
<a name="l00067"></a>00067 
<a name="l00068"></a>00068 
<a name="l00069"></a>00069 <span class="comment">// Jagun: 01 Sept 2012: added the following to comply with</span>
<a name="l00070"></a>00070 <span class="comment">// Contiki sensor interface structure</span>
<a name="l00071"></a>00071 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00072"></a>00072 value(<span class="keywordtype">int</span> type)
<a name="l00073"></a>00073 {
<a name="l00074"></a>00074     <span class="keyword">static</span> uint8_t buffer[6];
<a name="l00075"></a>00075     <span class="keyword">static</span> <span class="keyword">struct </span>hmc5883l_data mag_data;
<a name="l00076"></a>00076 
<a name="l00077"></a>00077     <span class="keywordflow">switch</span> (type) {
<a name="l00078"></a>00078                                         <span class="comment">// Must get mag_x, y, z after getting the data first</span>
<a name="l00079"></a>00079         <span class="keywordflow">case</span> HMC5883L_LATCH_DATA:       <span class="comment">// In fact, get data and decode it</span>
<a name="l00080"></a>00080         <span class="keywordflow">default</span>:
<a name="l00081"></a>00081             hmc5883l_get_data(buffer);
<a name="l00082"></a>00082             hmc5883l_decode(&amp;mag_data, buffer);
<a name="l00083"></a>00083             <span class="keywordflow">return</span> 1;
<a name="l00084"></a>00084         <span class="keywordflow">case</span> HMC5883L_MAG_X_RAW:
<a name="l00085"></a>00085             <span class="keywordflow">return</span> mag_data.mag_x;
<a name="l00086"></a>00086         <span class="keywordflow">case</span> HMC5883L_MAG_Y_RAW:
<a name="l00087"></a>00087             <span class="keywordflow">return</span> mag_data.mag_y;
<a name="l00088"></a>00088         <span class="keywordflow">case</span> HMC5883L_MAG_Z_RAW:
<a name="l00089"></a>00089             <span class="keywordflow">return</span> mag_data.mag_z;
<a name="l00090"></a>00090     }
<a name="l00091"></a>00091 }
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00094"></a>00094 status(<span class="keywordtype">int</span> type)
<a name="l00095"></a>00095 {
<a name="l00096"></a>00096     <span class="comment">// TODO We don&#39;t seem to have an equivalent for this</span>
<a name="l00097"></a>00097     <span class="keywordflow">return</span> 1;
<a name="l00098"></a>00098 }
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00101"></a>00101 configure(<span class="keywordtype">int</span> type, <span class="keywordtype">int</span> c)
<a name="l00102"></a>00102 {
<a name="l00103"></a>00103         hmc5883l_init();
<a name="l00104"></a>00104         hmc5883l_start();
<a name="l00105"></a>00105     <span class="keywordflow">return</span> 1;
<a name="l00106"></a>00106 }
<a name="l00107"></a>00107 
<a name="l00108"></a>00108 <span class="comment">// Instantiate the sensor : 3-Axis Digital Compass</span>
<a name="l00109"></a>00109 SENSORS_SENSOR(hmc5883l_sensor, <span class="stringliteral">&quot;hmc5883l-Sensor&quot;</span>, value, configure, status);
<a name="l00110"></a>00110 
<a name="l00111"></a>00111 
</pre></div></div><!-- contents -->


<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 13 2013 10:57:27 for Contiki 2.6 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
