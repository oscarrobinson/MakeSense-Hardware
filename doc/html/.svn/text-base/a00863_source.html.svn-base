<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Contiki 2.6: platform/sensinode/dev/leds-arch.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />



</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Contiki 2.6
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_da81161b528b307837d2c2604d1aafcb.html">platform</a>      </li>
      <li class="navelem"><a class="el" href="dir_9f7c3ae195d7387d42137819fe980698.html">sensinode</a>      </li>
      <li class="navelem"><a class="el" href="dir_aa4731f2a7009db4830500e0ed9e9d10.html">dev</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">leds-arch.c</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="preprocessor">#include &quot;contiki-conf.h&quot;</span>
<a name="l00002"></a>00002 <span class="preprocessor">#include &quot;dev/models.h&quot;</span>
<a name="l00003"></a>00003 <span class="preprocessor">#include &quot;dev/leds.h&quot;</span>
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="preprocessor">#include &quot;<a class="code" href="a00781.html" title="CC2430 registers header file for CC2430.">cc2430_sfr.h</a>&quot;</span>
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 <span class="comment">/*</span>
<a name="l00008"></a>00008 <span class="comment"> * Sensinode v1.0 HW products have 2 red LEDs, LED1 is mapped to the Contiki</span>
<a name="l00009"></a>00009 <span class="comment"> * LEDS_GREEN and LED2 is mapped to LEDS_RED.</span>
<a name="l00010"></a>00010 <span class="comment"> */</span>
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="comment">/*---------------------------------------------------------------------------*/</span>
<a name="l00013"></a>00013 <span class="keywordtype">void</span>
<a name="l00014"></a><a class="code" href="a01873.html#gac287ce66ae3e3751c7c57de50b451ddb">00014</a> <a class="code" href="a01873.html#gac287ce66ae3e3751c7c57de50b451ddb" title="Leds implementation.">leds_arch_init</a>(<span class="keywordtype">void</span>)
<a name="l00015"></a>00015 {
<a name="l00016"></a>00016 <span class="preprocessor">#ifdef MODEL_N740</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span>  <span class="comment">/*</span>
<a name="l00018"></a>00018 <span class="comment">   * We don&#39;t need explicit led initialisation for N740s. They are controlled</span>
<a name="l00019"></a>00019 <span class="comment">   * by the ser/par chip which is initalised already</span>
<a name="l00020"></a>00020 <span class="comment">   */</span>
<a name="l00021"></a>00021   <span class="keywordflow">return</span>;
<a name="l00022"></a>00022 <span class="preprocessor">#else</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>  P0DIR |= 0x30;
<a name="l00024"></a>00024 <span class="preprocessor">#endif</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>}
<a name="l00026"></a>00026 <span class="comment">/*---------------------------------------------------------------------------*/</span>
<a name="l00027"></a>00027 <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>
<a name="l00028"></a>00028 leds_arch_get(<span class="keywordtype">void</span>)
<a name="l00029"></a>00029 {
<a name="l00030"></a>00030   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> l = 0;
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="preprocessor">#ifdef MODEL_N740</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span>  <span class="comment">/* Read the current ser-par chip status */</span>
<a name="l00034"></a>00034   uint8_t ser_par;
<a name="l00035"></a>00035   ser_par = n740_ser_par_get();
<a name="l00036"></a>00036   <span class="comment">/* Check bits 7 &amp; 8, ignore the rest */</span>
<a name="l00037"></a>00037   <span class="keywordflow">if</span>(ser_par &amp; N740_SER_PAR_LED_GREEN) {
<a name="l00038"></a>00038     l |= LEDS_GREEN;
<a name="l00039"></a>00039   }
<a name="l00040"></a>00040   <span class="keywordflow">if</span>(ser_par &amp; N740_SER_PAR_LED_RED) {
<a name="l00041"></a>00041     l |= LEDS_RED;
<a name="l00042"></a>00042   }
<a name="l00043"></a>00043 <span class="preprocessor">#else</span>
<a name="l00044"></a>00044 <span class="preprocessor"></span>  <span class="keywordflow">if</span>(LED1_PIN) {
<a name="l00045"></a>00045     l |= LEDS_GREEN;
<a name="l00046"></a>00046   }
<a name="l00047"></a>00047   <span class="keywordflow">if</span>(LED2_PIN) {
<a name="l00048"></a>00048     l |= LEDS_RED;
<a name="l00049"></a>00049   }
<a name="l00050"></a>00050 <span class="preprocessor">#endif</span>
<a name="l00051"></a>00051 <span class="preprocessor"></span>  <span class="keywordflow">return</span> l;
<a name="l00052"></a>00052 }
<a name="l00053"></a>00053 <span class="comment">/*---------------------------------------------------------------------------*/</span>
<a name="l00054"></a>00054 <span class="keywordtype">void</span>
<a name="l00055"></a>00055 leds_arch_set(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> leds)
<a name="l00056"></a>00056 {
<a name="l00057"></a>00057 <span class="preprocessor">#ifdef MODEL_N740</span>
<a name="l00058"></a>00058 <span class="preprocessor"></span>  <span class="comment">/* Read the current ser-par chip status - we want to change bits 7 &amp; 8 but</span>
<a name="l00059"></a>00059 <span class="comment">   * the remaining bit values should be retained */</span>
<a name="l00060"></a>00060   uint8_t ser_par;
<a name="l00061"></a>00061   ser_par = n740_ser_par_get();
<a name="l00062"></a>00062   <span class="keywordflow">if</span>(leds &amp; LEDS_GREEN) {
<a name="l00063"></a>00063     ser_par |= N740_SER_PAR_LED_GREEN; <span class="comment">/* Set bit 7 */</span>
<a name="l00064"></a>00064   } <span class="keywordflow">else</span> {
<a name="l00065"></a>00065     ser_par &amp;= ~N740_SER_PAR_LED_GREEN; <span class="comment">/* Unset bit 7 */</span>
<a name="l00066"></a>00066   }
<a name="l00067"></a>00067 
<a name="l00068"></a>00068   <span class="keywordflow">if</span>(leds &amp; LEDS_RED) {
<a name="l00069"></a>00069     ser_par |= N740_SER_PAR_LED_RED; <span class="comment">/* Set bit 8 */</span>
<a name="l00070"></a>00070   } <span class="keywordflow">else</span> {
<a name="l00071"></a>00071     ser_par &amp;= ~N740_SER_PAR_LED_RED; <span class="comment">/* Unset bit 8 */</span>
<a name="l00072"></a>00072   }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074   <span class="comment">/* Write the new status back to the chip */</span>
<a name="l00075"></a>00075   n740_ser_par_set(ser_par);
<a name="l00076"></a>00076 <span class="preprocessor">#else</span>
<a name="l00077"></a>00077 <span class="preprocessor"></span>  <span class="keywordflow">if</span>(leds &amp; LEDS_GREEN) {
<a name="l00078"></a>00078     LED1_PIN = 1;
<a name="l00079"></a>00079   } <span class="keywordflow">else</span> {
<a name="l00080"></a>00080     LED1_PIN = 0;
<a name="l00081"></a>00081   }
<a name="l00082"></a>00082 
<a name="l00083"></a>00083   <span class="keywordflow">if</span>(leds &amp; LEDS_RED) {
<a name="l00084"></a>00084     LED2_PIN = 1;
<a name="l00085"></a>00085   } <span class="keywordflow">else</span> {
<a name="l00086"></a>00086     LED2_PIN = 0;
<a name="l00087"></a>00087   }
<a name="l00088"></a>00088 <span class="preprocessor">#endif</span>
<a name="l00089"></a>00089 <span class="preprocessor"></span>}
<a name="l00090"></a>00090 <span class="comment">/*---------------------------------------------------------------------------*/</span>
</pre></div></div><!-- contents -->


<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 13 2013 10:57:25 for Contiki 2.6 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
