<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Contiki 2.6: cpu/cc2430/rtimer-arch.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />



</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Contiki 2.6
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_bd0bc4a94a775a8b7ece71496ffca05e.html">cpu</a>      </li>
      <li class="navelem"><a class="el" href="dir_00802af3c5996426ebace365e6a37d81.html">cc2430</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">rtimer-arch.c</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00588.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (c) 2010, Loughborough University - Computer Science</span>
<a name="l00003"></a>00003 <span class="comment"> * All rights reserved.</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * Redistribution and use in source and binary forms, with or without</span>
<a name="l00006"></a>00006 <span class="comment"> * modification, are permitted provided that the following conditions</span>
<a name="l00007"></a>00007 <span class="comment"> * are met:</span>
<a name="l00008"></a>00008 <span class="comment"> * 1. Redistributions of source code must retain the above copyright</span>
<a name="l00009"></a>00009 <span class="comment"> *    notice, this list of conditions and the following disclaimer.</span>
<a name="l00010"></a>00010 <span class="comment"> * 2. Redistributions in binary form must reproduce the above copyright</span>
<a name="l00011"></a>00011 <span class="comment"> *    notice, this list of conditions and the following disclaimer in the</span>
<a name="l00012"></a>00012 <span class="comment"> *    documentation and/or other materials provided with the distribution.</span>
<a name="l00013"></a>00013 <span class="comment"> * 3. Neither the name of the Institute nor the names of its contributors</span>
<a name="l00014"></a>00014 <span class="comment"> *    may be used to endorse or promote products derived from this software</span>
<a name="l00015"></a>00015 <span class="comment"> *    without specific prior written permission.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS&#39;&#39; AND</span>
<a name="l00018"></a>00018 <span class="comment"> * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</span>
<a name="l00019"></a>00019 <span class="comment"> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</span>
<a name="l00020"></a>00020 <span class="comment"> * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE</span>
<a name="l00021"></a>00021 <span class="comment"> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>
<a name="l00022"></a>00022 <span class="comment"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>
<a name="l00023"></a>00023 <span class="comment"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>
<a name="l00024"></a>00024 <span class="comment"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT</span>
<a name="l00025"></a>00025 <span class="comment"> * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY</span>
<a name="l00026"></a>00026 <span class="comment"> * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF</span>
<a name="l00027"></a>00027 <span class="comment"> * SUCH DAMAGE.</span>
<a name="l00028"></a>00028 <span class="comment"> *</span>
<a name="l00029"></a>00029 <span class="comment"> * This file is part of the Contiki operating system.</span>
<a name="l00030"></a>00030 <span class="comment"> *</span>
<a name="l00031"></a>00031 <span class="comment"> */</span>
<a name="l00032"></a>00032 <span class="comment"></span>
<a name="l00033"></a>00033 <span class="comment">/**</span>
<a name="l00034"></a>00034 <span class="comment"> * \file</span>
<a name="l00035"></a>00035 <span class="comment"> *         Hardware-dependent functions used to support the</span>
<a name="l00036"></a>00036 <span class="comment"> *         contiki rtimer module.</span>
<a name="l00037"></a>00037 <span class="comment"> *</span>
<a name="l00038"></a>00038 <span class="comment"> *         clock and etimer are using the sleep timer on the cc2430</span>
<a name="l00039"></a>00039 <span class="comment"> *</span>
<a name="l00040"></a>00040 <span class="comment"> *         clock_init() has set our tick speed prescaler already, so we</span>
<a name="l00041"></a>00041 <span class="comment"> *         are ticking with 500 kHz freq.</span>
<a name="l00042"></a>00042 <span class="comment"> *</span>
<a name="l00043"></a>00043 <span class="comment"> *         rtimer_clock_t is unsigned short (16bit on the cc2430)</span>
<a name="l00044"></a>00044 <span class="comment"> *         It thus makes sense to use the 16bit clock (Timer 1)</span>
<a name="l00045"></a>00045 <span class="comment"> *</span>
<a name="l00046"></a>00046 <span class="comment"> *         This file contains an ISR and must reside in the HOME bank</span>
<a name="l00047"></a>00047 <span class="comment"> *</span>
<a name="l00048"></a>00048 <span class="comment"> * \author</span>
<a name="l00049"></a>00049 <span class="comment"> *         George Oikonomou - &lt;oikonomou@users.sourceforge.net&gt;</span>
<a name="l00050"></a>00050 <span class="comment"> */</span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="preprocessor">#include &quot;<a class="code" href="a00476.html" title="Header file for the real-time timer module.">sys/rtimer.h</a>&quot;</span> <span class="comment">/* Includes rtimer-arch.h for us */</span>
<a name="l00053"></a>00053 <span class="preprocessor">#include &quot;<a class="code" href="a00781.html" title="CC2430 registers header file for CC2430.">cc2430_sfr.h</a>&quot;</span>
<a name="l00054"></a>00054 <span class="preprocessor">#include &quot;<a class="code" href="a00455.html" title="Header file for the energy estimation mechanism.">sys/energest.h</a>&quot;</span>
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 <span class="preprocessor">#define DEBUG 0</span>
<a name="l00057"></a>00057 <span class="preprocessor"></span><span class="preprocessor">#if DEBUG</span>
<a name="l00058"></a>00058 <span class="preprocessor"></span><span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00059"></a>00059 <span class="preprocessor">#define PRINTF(...) printf(__VA_ARGS__)</span>
<a name="l00060"></a>00060 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00061"></a>00061 <span class="preprocessor"></span><span class="preprocessor">#define PRINTF(...)</span>
<a name="l00062"></a>00062 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00063"></a>00063 <span class="preprocessor"></span>
<a name="l00064"></a>00064 <span class="comment">/*---------------------------------------------------------------------------*/</span>
<a name="l00065"></a>00065 <span class="keywordtype">void</span>
<a name="l00066"></a>00066 rtimer_arch_init(<span class="keywordtype">void</span>)
<a name="l00067"></a>00067 {
<a name="l00068"></a>00068   PRINTF(<span class="stringliteral">&quot;rtimer_arch_init() &quot;</span>);
<a name="l00069"></a>00069   <span class="comment">/*</span>
<a name="l00070"></a>00070 <span class="comment">   * - Free running mode</span>
<a name="l00071"></a>00071 <span class="comment">   * - Prescale by 32:</span>
<a name="l00072"></a>00072 <span class="comment">   *   Tick Speed has been prescaled to 500 kHz already in clock_init()</span>
<a name="l00073"></a>00073 <span class="comment">   *   We further prescale by 32 resulting in 15625 Hz for this timer.</span>
<a name="l00074"></a>00074 <span class="comment">   */</span>
<a name="l00075"></a>00075   T1CTL = (T1DIV1 | T1MODE0); <span class="comment">/* 00001001 */</span>
<a name="l00076"></a>00076   PRINTF(<span class="stringliteral">&quot;T1CTL=0x%02x\n&quot;</span>, T1CTL);
<a name="l00077"></a>00077   <span class="comment">/* Acknowledge Timer 1 Interrupts */</span>
<a name="l00078"></a>00078   IEN1_T1IE = 1;
<a name="l00079"></a>00079   PRINTF(<span class="stringliteral">&quot;IEN1_T1IE=0x%02x\n&quot;</span>, IEN1_T1IE);
<a name="l00080"></a>00080 
<a name="l00081"></a>00081   <span class="comment">/* Timer 1, Channel 1. Compare Mode (0x04), Interrupt mask on (0x40) */</span>
<a name="l00082"></a>00082   T1CCTL1 = T1MODE + T1IM;
<a name="l00083"></a>00083   PRINTF(<span class="stringliteral">&quot;T1CCTL1=0x%02x\n&quot;</span>, T1CCTL1);
<a name="l00084"></a>00084 
<a name="l00085"></a>00085   <span class="comment">/* Interrupt Mask Flags: No interrupt on overflow */</span>
<a name="l00086"></a>00086   TIMIF &amp;= ~OVFIM;
<a name="l00087"></a>00087   PRINTF(<span class="stringliteral">&quot;TIMIF=0x%02x\n&quot;</span>, TIMIF);
<a name="l00088"></a>00088 
<a name="l00089"></a>00089   PRINTF(<span class="stringliteral">&quot;done\n&quot;</span>);
<a name="l00090"></a>00090 }
<a name="l00091"></a>00091 <span class="comment">/*---------------------------------------------------------------------------*/</span>
<a name="l00092"></a>00092 <span class="keywordtype">void</span>
<a name="l00093"></a>00093 rtimer_arch_schedule(rtimer_clock_t t)
<a name="l00094"></a>00094 {
<a name="l00095"></a>00095   PRINTF(<span class="stringliteral">&quot;rtimer_arch_schedule(%u)\n&quot;</span>, t);
<a name="l00096"></a>00096 
<a name="l00097"></a>00097   <span class="comment">/* set the compare mode values so we can get an interrupt after t */</span>
<a name="l00098"></a>00098   T1CC1L = (<span class="keywordtype">unsigned</span> char) t;
<a name="l00099"></a>00099   T1CC1H = (<span class="keywordtype">unsigned</span> char) (t &gt;&gt; 8);
<a name="l00100"></a>00100   PRINTF(<span class="stringliteral">&quot;T1CC1=%u, t=%u\n&quot;</span>, (T1CC1L + (T1CC1H &lt;&lt; 8)), t);
<a name="l00101"></a>00101 
<a name="l00102"></a>00102   <span class="comment">/* Turn on compare mode interrupt */</span>
<a name="l00103"></a>00103   PRINTF(<span class="stringliteral">&quot;T1CTL=0x%02x\n&quot;</span>, T1CTL);
<a name="l00104"></a>00104   T1CCTL1 |= T1IM;
<a name="l00105"></a>00105 }
<a name="l00106"></a>00106 <span class="comment">/*---------------------------------------------------------------------------*/</span>
<a name="l00107"></a>00107 <span class="keywordtype">void</span>
<a name="l00108"></a>00108 cc2430_timer_1_ISR(<span class="keywordtype">void</span>) __interrupt (T1_VECTOR)
<a name="l00109"></a>00109 {
<a name="l00110"></a>00110   IEN1_T1IE = 0; <span class="comment">/* Ignore Timer 1 Interrupts */</span>
<a name="l00111"></a>00111   ENERGEST_ON(ENERGEST_TYPE_IRQ);
<a name="l00112"></a>00112   <span class="comment">/* No more interrupts from Channel 1 till next rtimer_arch_schedule() call.</span>
<a name="l00113"></a>00113 <span class="comment">   * Setting the mask will instantly generate an interrupt so we clear the</span>
<a name="l00114"></a>00114 <span class="comment">   * flag first. */</span>
<a name="l00115"></a>00115   T1CTL &amp;= ~(CH1IF);
<a name="l00116"></a>00116   T1CCTL1 &amp;= ~T1IM;
<a name="l00117"></a>00117 
<a name="l00118"></a>00118   <a class="code" href="a01868.html#gaa9322a37b5a9b7ff51018fa67e39ad3b" title="Execute the next real-time task and schedule the next task, if any.">rtimer_run_next</a>();
<a name="l00119"></a>00119 
<a name="l00120"></a>00120   ENERGEST_OFF(ENERGEST_TYPE_IRQ);
<a name="l00121"></a>00121   IEN1_T1IE = 1; <span class="comment">/* Acknowledge Timer 1 Interrupts */</span>
<a name="l00122"></a>00122 }
</pre></div></div><!-- contents -->


<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 13 2013 10:57:24 for Contiki 2.6 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
