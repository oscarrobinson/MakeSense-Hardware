<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Contiki 2.6: cpu/mc1322x/lib/spi.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />



</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Contiki 2.6
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_bd0bc4a94a775a8b7ece71496ffca05e.html">cpu</a>      </li>
      <li class="navelem"><a class="el" href="dir_8bca1e2239f92cd57dcc34ddecc77a01.html">mc1322x</a>      </li>
      <li class="navelem"><a class="el" href="dir_1700e2e18dd238bbb7a579504af93726.html">lib</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">spi.c</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * spi.c</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> *  Created on: 2 Aug 2011</span>
<a name="l00005"></a>00005 <span class="comment"> *      Author: anton</span>
<a name="l00006"></a>00006 <span class="comment"> *      Modded by Graeme McPhillips</span>
<a name="l00007"></a>00007 <span class="comment"> */</span>
<a name="l00008"></a>00008 <span class="comment">/*----------------------------------------------------------------------------*/</span>
<a name="l00009"></a>00009 
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;spi.h&quot;</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="comment">/*----------------------------------------------------------------------------*/</span>
<a name="l00014"></a>00014 
<a name="l00015"></a>00015 <span class="keywordtype">void</span> spi_init(<span class="keywordtype">void</span>) {
<a name="l00016"></a>00016 
<a name="l00017"></a>00017         <span class="comment">/* Activate spi module for SD use (mode 0 - CPHA=0, CPOL=0) */</span>
<a name="l00018"></a>00018         SPI-&gt;SETUPbits.MODE = SPI_MODE_MASTER ;
<a name="l00019"></a>00019         SPI-&gt;SETUPbits.SCK_PHASE = 0 ;
<a name="l00020"></a>00020         SPI-&gt;SETUPbits.SCK_POL = 0 ;
<a name="l00021"></a>00021         SPI-&gt;SETUPbits.SS_SETUP = SPI_SS_MAN_LOW ;
<a name="l00022"></a>00022         SPI-&gt;SETUPbits.SDO_INACTIVE_ST = 1 ;
<a name="l00023"></a>00023         SPI-&gt;SETUPbits.SCK_FREQ =  SPI_FREQ_375KHZ ;    <span class="comment">/* for SD initialization */</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025         <span class="comment">/* PU on MISO */</span>
<a name="l00026"></a>00026         GPIO-&gt;PAD_PU_EN.SPI_MISO = 1 ;
<a name="l00027"></a>00027         GPIO-&gt;PAD_PU_SEL.SPI_MISO = 1 ;
<a name="l00028"></a>00028 
<a name="l00029"></a>00029         <span class="comment">/* Set GPIO mode */</span>
<a name="l00030"></a>00030         GPIO-&gt;FUNC_SEL.SPI_SS   = 1 ;
<a name="l00031"></a>00031         GPIO-&gt;FUNC_SEL.SPI_MISO = 1 ;
<a name="l00032"></a>00032         GPIO-&gt;FUNC_SEL.SPI_MOSI = 1 ;
<a name="l00033"></a>00033         GPIO-&gt;FUNC_SEL.SPI_SCK  = 1 ;
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 }
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="comment">/*----------------------------------------------------------------------------*/</span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 <span class="comment">/* Generic function to send and receive a byte */</span>
<a name="l00040"></a>00040 uint8_t spi_rw_byte(uint8_t data_out) {
<a name="l00041"></a>00041 
<a name="l00042"></a>00042         uint8_t data_in ;
<a name="l00043"></a>00043 
<a name="l00044"></a>00044         spi_set_sck(8) ;
<a name="l00045"></a>00045         spi_data_len(8) ;
<a name="l00046"></a>00046         SPI-&gt;TX_DATAbits.DATA = data_out ;
<a name="l00047"></a>00047         spi_start() ;
<a name="l00048"></a>00048 
<a name="l00049"></a>00049         <span class="keywordflow">while</span>(!spi_done()) { <span class="comment">/* Wait */</span> }
<a name="l00050"></a>00050 
<a name="l00051"></a>00051         data_in = SPI-&gt;RX_DATAbits.DATA ;
<a name="l00052"></a>00052 
<a name="l00053"></a>00053         spi_int_clear() ;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055         <span class="keywordflow">return</span> data_in ;
<a name="l00056"></a>00056 }
<a name="l00057"></a>00057 
<a name="l00058"></a>00058 <span class="comment">/*----------------------------------------------------------------------------*/</span>
<a name="l00059"></a>00059 
<a name="l00060"></a>00060 <span class="comment">/* The SPI Interrupt Service Routine */</span>
<a name="l00061"></a>00061 <span class="keywordtype">void</span> spi_isr (<span class="keywordtype">void</span>) {
<a name="l00062"></a>00062 <span class="comment">//      uint8_t dummy;</span>
<a name="l00063"></a>00063         spi_int_clear();
<a name="l00064"></a>00064 
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 }
</pre></div></div><!-- contents -->


<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 13 2013 10:57:25 for Contiki 2.6 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
