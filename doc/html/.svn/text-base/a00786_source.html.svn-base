<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Contiki 2.6: cpu/cc2430/dev/cc2430_rf_intr.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />



</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Contiki 2.6
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_bd0bc4a94a775a8b7ece71496ffca05e.html">cpu</a>      </li>
      <li class="navelem"><a class="el" href="dir_00802af3c5996426ebace365e6a37d81.html">cc2430</a>      </li>
      <li class="navelem"><a class="el" href="dir_2ac6ef05c3d0db66a619a71f04e7bd65.html">dev</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">cc2430_rf_intr.c</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00786.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**</span>
<a name="l00002"></a>00002 <span class="comment"> * \file</span>
<a name="l00003"></a>00003 <span class="comment"> *         CC2430 RF driver</span>
<a name="l00004"></a>00004 <span class="comment"> * \author</span>
<a name="l00005"></a>00005 <span class="comment"> *         Zach Shelby &lt;zach@sensinode.com&gt; (Original)</span>
<a name="l00006"></a>00006 <span class="comment"> *         George Oikonomou - &lt;oikonomou@users.sourceforge.net&gt;</span>
<a name="l00007"></a>00007 <span class="comment"> *           (recent updates for the contiki cc2430 port)</span>
<a name="l00008"></a>00008 <span class="comment"> *</span>
<a name="l00009"></a>00009 <span class="comment"> *  Non-bankable code for cc2430 rf driver.  </span>
<a name="l00010"></a>00010 <span class="comment"> *  Interrupt routines must be placed into the HOME bank.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> */</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;contiki.h&quot;</span>
<a name="l00017"></a>00017 <span class="preprocessor">#include &quot;<a class="code" href="a00173.html" title="Header file for the radio API.">dev/radio.h</a>&quot;</span>
<a name="l00018"></a>00018 <span class="preprocessor">#include &quot;<a class="code" href="a00785.html" title="CC2430 RF driver header file.">dev/cc2430_rf.h</a>&quot;</span>
<a name="l00019"></a>00019 <span class="preprocessor">#include &quot;<a class="code" href="a00781.html" title="CC2430 registers header file for CC2430.">cc2430_sfr.h</a>&quot;</span>
<a name="l00020"></a>00020 <span class="preprocessor">#ifdef RF_LED_ENABLE</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#include &quot;dev/leds.h&quot;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#endif</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#include &quot;sys/clock.h&quot;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="a00305.html" title="Header file for the Rime buffer (packetbuf) management.">net/packetbuf.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="a00360.html" title="Header file for Rime statistics.">net/rime/rimestats.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="a00303.html" title="Include file for the Contiki low-layer network stack (NETSTACK)">net/netstack.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#define DEBUG 0</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span><span class="preprocessor">#if DEBUG</span>
<a name="l00030"></a>00030 <span class="preprocessor"></span><span class="preprocessor">#define PRINTF(...) printf(__VA_ARGS__)</span>
<a name="l00031"></a>00031 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00032"></a>00032 <span class="preprocessor"></span><span class="preprocessor">#define PRINTF(...) do {} while (0)</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span>
<a name="l00035"></a>00035 <span class="preprocessor">#ifdef RF_LED_ENABLE</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span><span class="preprocessor">#define RF_RX_LED_ON()          leds_on(LEDS_RED);</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span><span class="preprocessor">#define RF_RX_LED_OFF()         leds_off(LEDS_RED);</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span><span class="preprocessor">#define RF_TX_LED_ON()          leds_on(LEDS_GREEN);</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span><span class="preprocessor">#define RF_TX_LED_OFF()         leds_off(LEDS_GREEN);</span>
<a name="l00040"></a>00040 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00041"></a>00041 <span class="preprocessor"></span><span class="preprocessor">#define RF_RX_LED_ON()</span>
<a name="l00042"></a>00042 <span class="preprocessor"></span><span class="preprocessor">#define RF_RX_LED_OFF()</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span><span class="preprocessor">#define RF_TX_LED_ON()</span>
<a name="l00044"></a>00044 <span class="preprocessor"></span><span class="preprocessor">#define RF_TX_LED_OFF()</span>
<a name="l00045"></a>00045 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00046"></a>00046 <span class="preprocessor"></span>
<a name="l00047"></a>00047 <span class="preprocessor">#ifdef HAVE_RF_ERROR</span>
<a name="l00048"></a>00048 <span class="preprocessor"></span>uint8_t rf_error = 0;
<a name="l00049"></a>00049 <span class="preprocessor">#endif</span>
<a name="l00050"></a>00050 <span class="preprocessor"></span>
<a name="l00051"></a>00051 <a class="code" href="a01866.html#ga96ff784b76d6edef302610d69664025f" title="Declare the name of a process.">PROCESS_NAME</a>(cc2430_rf_process);
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 <span class="preprocessor">#if !NETSTACK_CONF_SHORTCUTS</span>
<a name="l00054"></a>00054 <span class="preprocessor"></span><span class="comment">/*---------------------------------------------------------------------------*/</span><span class="comment"></span>
<a name="l00055"></a>00055 <span class="comment">/**</span>
<a name="l00056"></a>00056 <span class="comment"> * RF interrupt service routine.</span>
<a name="l00057"></a>00057 <span class="comment"> *</span>
<a name="l00058"></a>00058 <span class="comment"> */</span>
<a name="l00059"></a>00059 <span class="keywordtype">void</span>
<a name="l00060"></a><a class="code" href="a00786.html#a2a216b383153be23e6249de575d211da">00060</a> <a class="code" href="a00785.html#a3b377a8bbddaa2ae65624349f8d204d9" title="RF interrupt service routine.">cc2430_rf_ISR</a>( <span class="keywordtype">void</span> ) __interrupt (RF_VECTOR)
<a name="l00061"></a>00061 {
<a name="l00062"></a>00062   EA = 0;
<a name="l00063"></a>00063   ENERGEST_ON(ENERGEST_TYPE_IRQ);
<a name="l00064"></a>00064   <span class="comment">/*</span>
<a name="l00065"></a>00065 <span class="comment">   * We only vector here if RFSTATUS.FIFOP goes high.</span>
<a name="l00066"></a>00066 <span class="comment">   * Just double check the flag.</span>
<a name="l00067"></a>00067 <span class="comment">   */</span>
<a name="l00068"></a>00068   <span class="keywordflow">if</span>(RFIF &amp; IRQ_FIFOP) {
<a name="l00069"></a>00069       RF_RX_LED_ON();
<a name="l00070"></a>00070       <span class="comment">/* Poll the RF process which calls cc2430_rf_read() */</span>
<a name="l00071"></a>00071       <a class="code" href="a01866.html#ga496ba132ce7a2ec12a8313dc05ab0142" title="Request a process to be polled.">process_poll</a>(&amp;cc2430_rf_process);
<a name="l00072"></a>00072   }
<a name="l00073"></a>00073   S1CON &amp;= ~(RFIF_0 | RFIF_1);
<a name="l00074"></a>00074 
<a name="l00075"></a>00075   ENERGEST_OFF(ENERGEST_TYPE_IRQ);
<a name="l00076"></a>00076   EA = 1;
<a name="l00077"></a>00077 }
<a name="l00078"></a>00078 <span class="preprocessor">#endif</span>
<a name="l00079"></a>00079 <span class="preprocessor"></span><span class="comment">/*---------------------------------------------------------------------------*/</span>
<a name="l00080"></a>00080 <span class="preprocessor">#if CC2430_RFERR_INTERRUPT</span>
<a name="l00081"></a>00081 <span class="preprocessor"></span><span class="comment">/**</span>
<a name="l00082"></a>00082 <span class="comment"> * RF error interrupt service routine.</span>
<a name="l00083"></a>00083 <span class="comment"> * Turned off by default, can be turned on in contiki-conf.h</span>
<a name="l00084"></a>00084 <span class="comment"> */</span>
<a name="l00085"></a>00085 <span class="keywordtype">void</span>
<a name="l00086"></a>00086 cc2430_rf_error_ISR( <span class="keywordtype">void</span> ) __interrupt (RFERR_VECTOR)
<a name="l00087"></a>00087 {
<a name="l00088"></a>00088   EA = 0;
<a name="l00089"></a>00089   TCON_RFERRIF = 0;
<a name="l00090"></a>00090 <span class="preprocessor">#ifdef HAVE_RF_ERROR</span>
<a name="l00091"></a>00091 <span class="preprocessor"></span>  rf_error = 254;
<a name="l00092"></a>00092 <span class="preprocessor">#endif</span>
<a name="l00093"></a>00093 <span class="preprocessor"></span>  <a class="code" href="a00784.html#adfae0bca90e9c8ba0a7dbcb1d168a0be" title="Execute a single CSP command.">cc2430_rf_command</a>(ISRFOFF);
<a name="l00094"></a>00094   <a class="code" href="a00784.html#adfae0bca90e9c8ba0a7dbcb1d168a0be" title="Execute a single CSP command.">cc2430_rf_command</a>(ISFLUSHRX);
<a name="l00095"></a>00095   <a class="code" href="a00784.html#adfae0bca90e9c8ba0a7dbcb1d168a0be" title="Execute a single CSP command.">cc2430_rf_command</a>(ISFLUSHRX);
<a name="l00096"></a>00096   <a class="code" href="a00784.html#adfae0bca90e9c8ba0a7dbcb1d168a0be" title="Execute a single CSP command.">cc2430_rf_command</a>(ISRXON);
<a name="l00097"></a>00097   RF_RX_LED_OFF();
<a name="l00098"></a>00098   RF_TX_LED_OFF();
<a name="l00099"></a>00099   EA = 1;
<a name="l00100"></a>00100 }
<a name="l00101"></a>00101 <span class="preprocessor">#endif</span>
<a name="l00102"></a>00102 <span class="preprocessor"></span><span class="comment">/*---------------------------------------------------------------------------*/</span>
</pre></div></div><!-- contents -->


<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 13 2013 10:57:25 for Contiki 2.6 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
